Index: src/components/resources/css/tableChart.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.ReactTable {\n\tposition: relative;\n\tdisplay: -webkit-box;\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n\t-webkit-box-orient: vertical;\n\t-webkit-box-direction: normal;\n\t-ms-flex-direction: column;\n\tflex-direction: column;\n\tborder: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.ReactTable * {\n\tbox-sizing: border-box\n}\n\n.ReactTable .rt-table {\n\t-webkit-box-flex: 1;\n\t-ms-flex: auto 1;\n\tflex: auto 1;\n\tdisplay: -webkit-box;\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n\t-webkit-box-orient: vertical;\n\t-webkit-box-direction: normal;\n\t-ms-flex-direction: column;\n\tflex-direction: column;\n\t-webkit-box-align: stretch;\n\t-ms-flex-align: stretch;\n\talign-items: stretch;\n\twidth: 100%;\n\tborder-collapse: collapse;\n\toverflow: auto\n}\n\n.ReactTable .rt-thead {\n\t-webkit-box-flex: 1;\n\t-ms-flex: 1 0 auto;\n\tflex: 1 0 auto;\n\tdisplay: -webkit-box;\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n\t-webkit-box-orient: vertical;\n\t-webkit-box-direction: normal;\n\t-ms-flex-direction: column;\n\tflex-direction: column;\n\t-webkit-user-select: none;\n\t-moz-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none;\n}\n\n.ReactTable .rt-thead.-headerGroups {\n\tbackground: rgba(0, 0, 0, 0.03);\n\tborder-bottom: 1px solid rgba(0, 0, 0, 0.05)\n}\n\n.ReactTable .rt-thead.-filters {\n\tborder-bottom: 1px solid rgba(0, 0, 0, 0.05);\n}\n\n.ReactTable .rt-thead.-filters input, .ReactTable .rt-thead.-filters select {\n\tborder: 1px solid rgba(0, 0, 0, 0.1);\n\tbackground: #fff;\n\tpadding: 5px 7px;\n\tfont-size: inherit;\n\tborder-radius: 3px;\n\tfont-weight: normal;\n\toutline: none\n}\n\n.ReactTable .rt-thead.-filters .rt-th {\n\tborder-right: 1px solid rgba(0, 0, 0, 0.02)\n}\n\n.ReactTable .rt-thead.-header {\n\tbox-shadow: 0 2px 15px 0 rgba(0, 0, 0, 0.15);\n\tfont-weight: 500;\n}\n\n.ReactTable .rt-thead .rt-tr {\n\ttext-align: left;\n}\n\n.ReactTable .rt-thead .rt-th, .ReactTable .rt-thead .rt-td {\n\tpadding: 0;\n\tline-height: normal;\n\tposition: relative;\n\tborder-right: 1px solid rgba(0, 0, 0, 0.05);\n\ttransition: box-shadow .3s cubic-bezier(.175, .885, .32, 1.275);\n\tbox-shadow: inset 0 0 0 0 transparent;\n}\n.ReactTable .rt-thead .rt-th div, .ReactTable .rt-thead .rt-td div{\n\tpadding: 7px 5px;\n}\n\n\n.ReactTable .rt-thead .rt-th.-sort-asc, .ReactTable .rt-thead .rt-td.-sort-asc {\n\tbox-shadow: inset 0 3px 0 0 rgba(0, 0, 0, 0.6)\n}\n\n.ReactTable .rt-thead .rt-th.-sort-desc, .ReactTable .rt-thead .rt-td.-sort-desc {\n\tbox-shadow: inset 0 -3px 0 0 rgba(0, 0, 0, 0.6)\n}\n\n.ReactTable .rt-thead .rt-th.-cursor-pointer, .ReactTable .rt-thead .rt-td.-cursor-pointer {\n\tcursor: pointer\n}\n\n.ReactTable .rt-thead .rt-th:last-child, .ReactTable .rt-thead .rt-td:last-child {\n\tborder-right: 0\n}\n\n.ReactTable .rt-thead .rt-resizable-header {\n\toverflow: visible;\n}\n\n.ReactTable .rt-thead .rt-resizable-header:last-child {\n\toverflow: hidden\n}\n\n.ReactTable .rt-thead .rt-resizable-header-content {\n\toverflow: hidden;\n\ttext-overflow: ellipsis\n}\n\n.ReactTable .rt-thead .rt-header-pivot {\n\tborder-right-color: #f7f7f7\n}\n\n.ReactTable .rt-thead .rt-header-pivot:after, .ReactTable .rt-thead .rt-header-pivot:before {\n\tleft: 100%;\n\ttop: 50%;\n\tborder: solid transparent;\n\tcontent: \" \";\n\theight: 0;\n\twidth: 0;\n\tposition: absolute;\n\tpointer-events: none\n}\n\n.ReactTable .rt-thead .rt-header-pivot:after {\n\tborder-color: rgba(255, 255, 255, 0);\n\tborder-left-color: #fff;\n\tborder-width: 8px;\n\tmargin-top: -8px\n}\n\n.ReactTable .rt-thead .rt-header-pivot:before {\n\tborder-color: rgba(102, 102, 102, 0);\n\tborder-left-color: #f7f7f7;\n\tborder-width: 10px;\n\tmargin-top: -10px\n}\n\n.ReactTable .rt-tbody {\n\t-webkit-box-flex: 99999;\n\t-ms-flex: 99999 1 auto;\n\tflex: 99999 1 auto;\n\tdisplay: -webkit-box;\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n\t-webkit-box-orient: vertical;\n\t-webkit-box-direction: normal;\n\t-ms-flex-direction: column;\n\tflex-direction: column;\n\toverflow: auto;\n}\n\n.ReactTable .rt-tbody .rt-tr-group {\n\tborder-bottom: 1px solid rgba(0, 0, 0, 0.05);\n}\n\n.ReactTable .rt-tbody .rt-tr-group:last-child {\n\tborder-bottom: 0;\n}\n\n.ReactTable .rt-tbody .rt-td {\n\tborder-right: 1px solid rgba(0,0,0,0.06);\n}\n\n.ReactTable .rt-tbody .rt-td:last-child {\n\tborder-right: 1px solid rgba(0,0,0,0.06);\n}\n\n.darkTheme .ReactTable .rt-tbody .rt-td {\t\n\tborder-right: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.darkTheme .ReactTable .rt-tbody .rt-td:last-child {\n\tborder-right: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n.ReactTable .rt-tbody .rt-expandable {\n\tcursor: pointer;\n}\n\n.ReactTable .rt-tr-group {\n\t-webkit-box-flex: 1;\n\t-ms-flex: 1 0 auto;\n\tflex: 1 0 auto;\n\tdisplay: -webkit-box;\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n\t-webkit-box-orient: vertical;\n\t-webkit-box-direction: normal;\n\t-ms-flex-direction: column;\n\tflex-direction: column;\n\t-webkit-box-align: stretch;\n\t-ms-flex-align: stretch;\n\talign-items: stretch\n}\n\n.ReactTable .rt-tr {\n\t-webkit-box-flex: 1;\n\t-ms-flex: 1 0 auto;\n\tflex: 1 0 auto;\n\tdisplay: -webkit-inline-box;\n\tdisplay: -ms-inline-flexbox;\n\tdisplay: inline-flex;\n}\n\n.ReactTable .rt-th, .ReactTable .rt-td {\n\t-webkit-box-flex: 1;\n\t-ms-flex: 1 0 0px;\n\tflex: 1 0 0;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\tpadding: 0;\n\toverflow: hidden;\n\ttransition: .3s ease;\n\ttransition-property: width, min-width, padding, opacity;\n}\n.ReactTable .rt-th div, .ReactTable .rt-td div{\n\tpadding: 7px 5px;\n}\n\n.ReactTable .rt-th.-hidden, .ReactTable .rt-td.-hidden {\n\twidth: 0 !important;\n\tmin-width: 0 !important;\n\tpadding: 0 !important;\n\tborder: 0 !important;\n\topacity: 0 !important\n}\n\n.ReactTable .rt-expander {\n\tdisplay: inline-block;\n\tposition: relative;\n\tmargin: 0;\n\tcolor: transparent;\n\tmargin: 0 10px;\n}\n\n.ReactTable .rt-expander:after {\n\tcontent: '';\n\tposition: absolute;\n\twidth: 0;\n\theight: 0;\n\ttop: 50%;\n\tleft: 50%;\n\t-webkit-transform: translate(-50%, -50%) rotate(-90deg);\n\ttransform: translate(-50%, -50%) rotate(-90deg);\n\tborder-left: 5.04px solid transparent;\n\tborder-right: 5.04px solid transparent;\n\tborder-top: 7px solid rgba(0, 0, 0, 0.8);\n\ttransition: all .3s cubic-bezier(.175, .885, .32, 1.275);\n\tcursor: pointer\n}\n\n.ReactTable .rt-expander.-open:after {\n\t-webkit-transform: translate(-50%, -50%) rotate(0);\n\ttransform: translate(-50%, -50%) rotate(0)\n}\n\n.ReactTable .rt-resizer {\n\tdisplay: inline-block;\n\tposition: absolute;\n\twidth: 36px;\n\ttop: 0;\n\tbottom: 0;\n\tright: -18px;\n\tcursor: col-resize;\n\tz-index: 10\n}\n\n.ReactTable .rt-tfoot {\n\t-webkit-box-flex: 1;\n\t-ms-flex: 1 0 auto;\n\tflex: 1 0 auto;\n\tdisplay: -webkit-box;\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n\t-webkit-box-orient: vertical;\n\t-webkit-box-direction: normal;\n\t-ms-flex-direction: column;\n\tflex-direction: column;\n\tbox-shadow: 0 0 15px 0 rgba(0, 0, 0, 0.15);\n}\n\n.ReactTable .rt-tfoot .rt-td {\n\tborder-right: 1px solid rgba(0, 0, 0, 0.05);\n}\n\n.ReactTable .rt-tfoot .rt-td:last-child {\n\tborder-right: 0\n}\n\n.ReactTable.-striped .rt-tr.-odd {\n\tbackground: rgba(0, 0, 0, 0.03)\n}\n\n.ReactTable.-highlight .rt-tbody .rt-tr:not(.-padRow):hover {\n\tbackground: rgba(0, 0, 0, 0.05)\n}\n\n.ReactTable .-pagination {\n\tz-index: 1;\n\tdisplay: -webkit-box;\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n\t-webkit-box-pack: justify;\n\t-ms-flex-pack: justify;\n\tjustify-content: space-between;\n\t-webkit-box-align: stretch;\n\t-ms-flex-align: stretch;\n\talign-items: stretch;\n\t-ms-flex-wrap: wrap;\n\tflex-wrap: wrap;\n\tpadding: 3px;\n\tbox-shadow: 0 0 15px 0 rgba(0, 0, 0, 0.1);\n\tborder-top: 2px solid rgba(0, 0, 0, 0.1);\n}\n\n.ReactTable .-pagination input, .ReactTable .-pagination select {\n\tborder: 1px solid rgba(0, 0, 0, 0.1);\n\tbackground: #fff;\n\tpadding: 5px 7px;\n\tfont-size: inherit;\n\tborder-radius: 3px;\n\tfont-weight: normal;\n\toutline: none\n}\n\n.ReactTable .-pagination .-btn {\n\t-webkit-appearance: none;\n\t-moz-appearance: none;\n\tappearance: none;\n\tdisplay: block;\n\twidth: 100%;\n\theight: 100%;\n\tborder: 0;\n\tborder-radius: 3px;\n\tpadding: 6px;\n\tfont-size: 1em;\n\tcolor: rgba(0, 0, 0, 0.6);\n\tbackground: rgba(0, 0, 0, 0.1);\n\ttransition: all .1s ease;\n\tcursor: pointer;\n\toutline: none;\n}\n\n.ReactTable .-pagination .-btn[disabled] {\n\topacity: .5;\n\tcursor: default\n}\n\n.ReactTable .-pagination .-btn:not([disabled]):hover {\n\tbackground: rgba(0, 0, 0, 0.3);\n\tcolor: #fff\n}\n\n.ReactTable .-pagination .-previous, .ReactTable .-pagination .-next {\n\t-webkit-box-flex: 1;\n\t-ms-flex: 1;\n\tflex: 1;\n\ttext-align: center\n}\n\n.ReactTable .-pagination .-center {\n\t-webkit-box-flex: 1.5;\n\t-ms-flex: 1.5;\n\tflex: 1.5;\n\ttext-align: center;\n\tmargin-bottom: 0;\n\tdisplay: -webkit-box;\n\tdisplay: -ms-flexbox;\n\tdisplay: flex;\n\t-webkit-box-orient: horizontal;\n\t-webkit-box-direction: normal;\n\t-ms-flex-direction: row;\n\tflex-direction: row;\n\t-ms-flex-wrap: wrap;\n\tflex-wrap: wrap;\n\t-webkit-box-align: center;\n\t-ms-flex-align: center;\n\talign-items: center;\n\t-ms-flex-pack: distribute;\n\tjustify-content: space-around\n}\n\n.ReactTable .-pagination .-pageInfo {\n\tdisplay: inline-block;\n\tmargin: 3px 10px;\n\twhite-space: nowrap\n}\n\n.ReactTable .-pagination .-pageJump {\n\tdisplay: inline-block;\n}\n\n.ReactTable .-pagination .-pageJump input {\n\twidth: 70px;\n\ttext-align: center\n}\n\n.ReactTable .-pagination .-pageSizeOptions {\n\tmargin: 3px 10px\n}\n\n.ReactTable .rt-noData {\n\tdisplay: block;\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\t-webkit-transform: translate(-50%, -50%);\n\ttransform: translate(-50%, -50%);\n\tbackground: #FAFAFA;\n\ttransition: all .3s ease;\n\tz-index: 1;\n\tpointer-events: none;\n\tpadding: 20px;\n\tcolor: rgba(0, 0, 0, 0.5)\n}\n\n.ReactTable .-loading {\n\tdisplay: block;\n\tposition: absolute;\n\tleft: 0;\n\tright: 0;\n\ttop: 0;\n\tbottom: 0;\n\tbackground: rgba(255, 255, 255, 0.8);\n\ttransition: all .3s ease;\n\tz-index: -1;\n\topacity: 0;\n\tpointer-events: none;\n}\n\n.ReactTable .-loading > div {\n\tposition: absolute;\n\tdisplay: block;\n\ttext-align: center;\n\twidth: 100%;\n\ttop: 50%;\n\tleft: 0;\n\tfont-size: 15px;\n\tcolor: rgba(0, 0, 0, 0.6);\n\t-webkit-transform: translateY(-52%);\n\ttransform: translateY(-52%);\n\ttransition: all .3s cubic-bezier(.25, .46, .45, .94)\n}\n\n.ReactTable .-loading.-active {\n\topacity: 1;\n\tz-index: 2;\n\tpointer-events: all;\n}\n\n.ReactTable .-loading.-active > div {\n\t-webkit-transform: translateY(50%);\n\ttransform: translateY(50%)\n}\n\n.ReactTable .rt-resizing .rt-th, .ReactTable .rt-resizing .rt-td {\n\ttransition: none !important;\n\tcursor: col-resize;\n\t-webkit-user-select: none;\n\t-moz-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none\n}\n\n/*Dark theme styles*/\n\n.darkTheme.ReactTable .rt-thead.-header {\n    color: #fff;\n    background: #333;\n}\n\n.darkTheme.ReactTable .rt-tbody .rt-tr-group {\n    border-bottom: 1px solid #818181;\n}\n\n.rt-td .cell-data {\n\ttext-align: left;\n}\n\n.darkTheme .rt-td .cell-data {\n\tcolor: #F5F5F5;\n}\n\n.darkTheme.ReactTable .-pagination .-pageInfo{\n\tcolor: #ccc;\n}\n\n.darkTheme.ReactTable .-pagination .-pageInfo .-pageJump {\n\tcolor: #333;\n}\n\n.darkTheme.ReactTable .-pagination .-pageInfo .-totalPages {\n\tcolor: #ccc;\n}\n\n.darkTheme.ReactTable .-pagination .-btn{\n    color: #fff;\n    background: #757575;\n}\n\n.darkTheme.ReactTable .-pagination .-pageInfo .-pageJump input,\n.darkTheme.ReactTable .-pagination .-pageSizeOptions select {\n    background: #424242;\n    color: #ccc;\n}\n\n.filter-search-container::before {\n    content: \"\\A0\";\n    position: absolute;\n    transition: border-bottom-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.42);\n    pointer-events: none;\n    width: 29%;\n    margin-left: 67%;\n    margin-top: 3px;\n}\n\n.darkTheme .filter-search-container::before {\n    border-bottom: 1px solid #ccc;\n}\n\n.filter-search {\n    width: 30%;\n    font: inherit;\n    border: 0;\n    margin: 0 0 10px 70%;\n    padding: 0;\n    display: block;\n\tborder-bottom: 1px solid #ccc;\n    box-sizing: content-box;\n    background: none;\n    vertical-align: middle;\n    -webkit-tap-highlight-color: transparent;\n}\n\n.darkTheme .filter-search {\n    color: #fff;\n}\n\n.filter-search:focus {\n    outline: none;\n}\n\n.darkTheme.ReactTable .rt-noData {\n\tbackground: #616161;\n\tcolor: #FAFAFA;\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/components/resources/css/tableChart.css	(date 1536741807000)
+++ src/components/resources/css/tableChart.css	(date 1536747080872)
@@ -208,7 +208,8 @@
 	flex-direction: column;
 	-webkit-box-align: stretch;
 	-ms-flex-align: stretch;
-	align-items: stretch
+	align-items: stretch;
+	line-height: 30px;
 }
 
 .ReactTable .rt-tr {
@@ -232,7 +233,7 @@
 	transition-property: width, min-width, padding, opacity;
 }
 .ReactTable .rt-th div, .ReactTable .rt-td div{
-	padding: 7px 5px;
+	padding: 0 5px;
 }
 
 .ReactTable .rt-th.-hidden, .ReactTable .rt-td.-hidden {
@@ -357,6 +358,7 @@
 	transition: all .1s ease;
 	cursor: pointer;
 	outline: none;
+	height: 40px;
 }
 
 .ReactTable .-pagination .-btn[disabled] {
Index: src/components/TableChart.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport ReactTable from 'react-table';\nimport { scaleLinear, timeFormat } from 'd3';\nimport 'react-table/react-table.css';\nimport _ from 'lodash';\nimport './resources/css/tableChart.css';\nimport { getDefaultColorScale } from './helper';\nimport VizGError from '../VizGError';\nimport BaseChart from './BaseChart';\n\nconst DAFAULT_ROW_COUNT_FOR_PAGINATION = 5;\n\n/**\n * Class to handle visualization of table charts.\n */\nexport default class TableChart extends BaseChart {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSets: [],\n            chartArray: [],\n            initialized: false,\n            filterValue: '',\n            number: 0,\n            selected: null,\n            loading: props.manual, // for loading animation when server-side pagination enabled\n        };\n\n        this.chartConfig = props.config;\n\n        this.sortDataBasedOnConfig = this.sortDataBasedOnConfig.bind(this);\n        this._getLinearColor = this._getLinearColor.bind(this);\n        this.idColumn = this.uuidv4();\n    }\n\n    componentDidMount() {\n        if (this.props.config && this.props.metadata) {\n            this.sortDataBasedOnConfig(this.props);\n        }\n    }\n\n    handleRowSelect(e, row) {\n        const { onClick } = this.props;\n\n        this.setState({ selected: row.original[this.idColumn] });\n\n        return onClick && onClick(row.original);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (!this.chartConfig || !_.isEqual(nextProps.config, this.chartConfig) || !this.props.append) {\n            this.state.initialized = false;\n            this.state.dataSets = [];\n            this.state.chartArray = [];\n            this.state.selected = null;\n            this.chartConfig = nextProps.config;\n        }\n\n        this.setState({ loading: false });\n        this.sortDataBasedOnConfig(nextProps);\n    }\n\n    sortDataBasedOnConfig(props) {\n        let { config, metadata, data } = props;\n        let { dataSets, chartArray, initialized, number } = this.state;\n\n        let key = config.charts[0].uniquePropertyColumn;\n\n        data = data.map((d) => {\n            const tmp = {};\n            for (let i = 0; i < metadata.names.length; i++) {\n                tmp[metadata.names[i]] = d[i];\n            }\n            tmp[this.idColumn] = number++;\n            return tmp;\n        });\n\n        if (key) {\n            dataSets = _.unionBy(dataSets, data, key);\n        } else {\n            dataSets = dataSets.concat(data);\n        }\n\n        while (dataSets.length > config.maxLength) {\n            dataSets.shift();\n        }\n\n        config.charts.forEach((chart) => {\n            chart.columns.forEach((column, i) => {\n                const colIndex = _.indexOf(metadata.names, column.name);\n\n                if (colIndex === -1) {\n                    throw new VizGError('TableChart', 'Unknown column name defined in the chart config.');\n                }\n\n                if (!initialized) {\n                    chartArray.push({\n                        name: column.name,\n                        title: column.title || column.name,\n                        highLight: !!column.highlight,\n                        colorBasedStyle: column.colorBasedStyle,\n                        colorScale: column.colorBasedStyle === true ?\n                            column.colorScale || getDefaultColorScale() : undefined,\n                        colorDomain: column.colorDomain,\n                        isTime: metadata.types[colIndex].toLowerCase() === 'time',\n                        colorIndex: 0,\n                        timeFormat: column.timeFormat,\n                        textColor: column.textColor,\n                    });\n                }\n\n                if (column.colorBasedStyle === true) {\n                    if (metadata.types[colIndex].toLowerCase() === 'linear' ||\n                        metadata.types[colIndex].toLowerCase() === 'time') {\n                        const max = _.max(dataSets.map(datum => datum[metadata.names[colIndex]]));\n                        const min = _.min(dataSets.map(datum => datum[metadata.names[colIndex]]));\n\n                        if (!Object.prototype.hasOwnProperty.call(chartArray[i], 'range')) {\n                            chartArray[i].range = [min, max];\n                        } else if (!_.isEqual(chartArray[i].range, [min, max])) {\n                            chartArray[i].range = [min, max];\n                        }\n                    } else {\n                        if (!Object.prototype.hasOwnProperty.call(chartArray[i], 'colorMap')) {\n                            chartArray[i].colorIndex = 0;\n                            chartArray[i].colorMap = {};\n                        }\n\n                        _.map(dataSets, column.name).forEach((category) => {\n                            if (!Object.prototype.hasOwnProperty.call(chartArray[i].colorMap, category)) {\n                                if (chartArray[i].colorIndex >= chartArray[i].colorScale.length) {\n                                    chartArray[i].colorIndex = 0;\n                                }\n\n                                if (column.colorDomain) {\n                                    const domainIndex = _.indexOf(column.colorDomain, category);\n\n                                    if (domainIndex >= 0 && domainIndex < chartArray[i].colorScale.length) {\n                                        chartArray[i].colorMap[category] = chartArray[i].colorScale[domainIndex];\n                                    } else {\n                                        chartArray[i].colorMap[category] =\n                                            chartArray[i].colorScale[chartArray[i].colorIndex++];\n                                    }\n                                } else {\n                                    chartArray[i].colorMap[category] =\n                                        chartArray[i].colorScale[chartArray[i].colorIndex++];\n                                }\n                            }\n                        });\n                    }\n                }\n            });\n        });\n\n        initialized = true;\n\n        this.setState({ dataSets, chartArray, initialized, number });\n    }\n\n    _getLinearColor(color, range, value) {\n        return scaleLinear().range(['#fff', color]).domain(range)(value);\n    }\n\n    render() {\n        const { config, metadata, manual, onFetchData, pages } = this.props;\n        const { dataSets, chartArray, filterValue, selected } = this.state;\n\n        const tableConfig = chartArray.map((column) => {\n            const columnConfig = {\n                Header: column.title,\n                accessor: column.name,\n                getProps: (state, rowInfo) => column.highLight &&\n                    typeof config.dataFunction === 'function' ? config.dataFunction(state, rowInfo) : '',\n                };\n\n            if (column.colorBasedStyle === true) {\n                columnConfig.Cell = props => (\n                    <div\n                        style={{\n                            width: '100%',\n                            height: '100%',\n                            backgroundColor:\n                                props.original[this.idColumn] === selected ?\n                                    config.selectedBackground || '#4286f4' :\n                                    column.range ?\n                                        this._getLinearColor(\n                                            column.colorScale[column.colorIndex], column.range, props.value) :\n                                        column.colorMap[props.value],\n                            margin: 0,\n                            textAlign: metadata.types[metadata.names.indexOf(props.column.id)] === 'linear' ||\n                                metadata.types[metadata.names.indexOf(props.column.id)] === 'time' ?\n                                'right' : 'left',\n                            borderRight: '1px solid rgba(0,0,0,0.02)',\n                        }}\n                    >\n                        <span\n                            style={{\n                                color: column.textColor || null,\n                                width: '100%',\n                            }}\n                        >\n                            {\n                                column.isTime && column.timeFormat ?\n                                    timeFormat(column.timeFormat)(props.value) : props.value\n                            }\n                        </span>\n                    </div>\n                );\n            } else {\n                columnConfig.Cell = props => (\n                    <div\n                        className={this.props.theme === 'light' ? 'rt-td' : 'cell-data'}\n                        style={{\n                            background: props.original[this.idColumn] === selected ?\n                                config.selectedBackground || '#4286f4' : null,\n                            height: '100%',\n                            color: config.selectedTextColor || null,\n                            width: '100%',\n                            textAlign: metadata.types[metadata.names.indexOf(props.column.id)] === 'linear' ||\n                                metadata.types[metadata.names.indexOf(props.column.id)] === 'time' ?\n                                'right' : 'left',\n                        }}\n                    >\n                        <span\n                            style={{\n                                width: '100%',\n                            }}\n                        >\n                            {\n                                column.isTime && column.timeFormat ?\n                                    timeFormat(column.timeFormat)(props.value) : props.value\n                            }\n                        </span>\n                    </div>\n                );\n            }\n\n            return columnConfig;\n        });\n\n\n        const filteredData = _.filter(dataSets, (obj) => {\n            return _.values(obj).toString().toLowerCase().includes(filterValue.toLowerCase());\n        });\n\n        let manualProps = {};\n\n        if (manual) {\n            manualProps = {\n                onFetchData: (state, instance) => {\n                    this.setState({ loading: true });\n                    return onFetchData(state, instance);\n                },\n                pages,\n            };\n        }\n\n        return (\n            <div>\n                {\n                    config.filterable ?\n                        <div className={'filter-search-container'} style={{ width: '100%', marginBottom: 2 }} >\n                            <input\n                                className={'filter-search'}\n                                type=\"text\"\n                                onChange={(evt) => {\n                                    this.setState({ filterValue: evt.target.value });\n                                }}\n                                placeholder=\"Enter value to filter data\"\n                            />\n                        </div> : null\n                }\n                <div style={{ height: 40 }}>\n                    <ReactTable\n                        data={filteredData}\n                        columns={tableConfig}\n                        showPagination={config.pagination === true}\n                        minRows={DAFAULT_ROW_COUNT_FOR_PAGINATION}\n                        className={this.props.theme === 'light' ? 'lightTheme' : 'darkTheme'}\n                        getTrProps={\n                            (state, rowInfo) => {\n                                return {\n                                    onClick: (e) => {\n                                        return this.handleRowSelect(e, rowInfo);\n                                    },\n                                };\n                            }\n                        }\n                        defaultPageSize={\n                            config.pagination === true ?\n                                DAFAULT_ROW_COUNT_FOR_PAGINATION : config.maxLength\n                        }\n                        manual={manual}\n                        {...manualProps}\n                        loading={this.state.loading}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    uuidv4() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/components/TableChart.jsx	(date 1536741807000)
+++ src/components/TableChart.jsx	(date 1536747050787)
@@ -288,7 +288,7 @@
                             />
                         </div> : null
                 }
-                <div style={{ height: 40 }}>
+                <div style={{ height: 30 }}>
                     <ReactTable
                         data={filteredData}
                         columns={tableConfig}
